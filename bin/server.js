// Generated by CoffeeScript 1.8.0
(function() {
  'use strict';
  var BadRequest, Boom, Hapi, Server;

  Hapi = require('hapi');

  Boom = require('boom');

  BadRequest = Boom.badRequest;

  Server = (function() {
    function Server() {
      this.server = new Hapi.Server();
      this.server.connection();
      this._names();
    }

    Server.prototype._names = function() {
      return this.server.route({
        method: 'GET',
        path: '/names',
        handler: (function(_this) {
          return function(req, reply) {
            if (!_this.snippetNames) {
              return reply(BadRequest('Server Has not been started!'));
            }
            return reply({
              names: _this.snippetNames
            });
          };
        })(this)
      });
    };

    Server.prototype._configure = function(path) {
      this.requiredFile = require(path);
      this.snippetNames = Object.keys(this.requiredFile);
      return this._setupRoutes();
    };

    Server.prototype._setupRoutes = function() {
      return this.server.route({
        method: ['PUT', 'POST', 'GET'],
        path: '/snippet/{name}',
        handler: (function(_this) {
          return function(req, reply) {
            var snippet;
            snippet = _this.requiredFile[req.params.name];
            if (!snippet) {
              return reply(BadRequest('Snippet Not Found!'));
            }
            return snippet(req, reply);
          };
        })(this)
      });
    };

    Server.prototype.start = function(path, cb) {
      if (!path) {
        throw Error('No Path Given!');
      }
      this._configure(path);
      return this.server.start(function(err) {
        if (cb) {
          return cb(err);
        }
      });
    };

    return Server;

  })();

  module.exports = new Server();

}).call(this);
